Release "my-test-app-release" has been upgraded. Happy Helming!
NAME: my-test-app-release
LAST DEPLOYED: Sun Apr 25 18:32:44 2021
NAMESPACE: default
STATUS: deployed
REVISION: 12
TEST SUITE: None
USER-SUPPLIED VALUES:
test: api-image.tag=dev

COMPUTED VALUES:
affinity: {}
autoscaling:
  enabled: false
  maxReplicas: 100
  minReplicas: 1
  targetCPUUtilizationPercentage: 80
fullnameOverride: ""
image:
  pullPolicy: IfNotPresent
  repository: nginx
  tag: ""
imagePullSecrets: []
ingress:
  annotations: {}
  enabled: false
  hosts:
  - host: chart-example.local
    paths: []
  tls: []
nameOverride: ""
nodeSelector: {}
podAnnotations: {}
podSecurityContext: {}
replicaCount: 1
resources: {}
securityContext: {}
service:
  port: 80
  type: ClusterIP
serviceAccount:
  annotations: {}
  create: true
  name: ""
test: api-image.tag=dev
test-app-api:
  autoscaling:
    enabled: false
  global: {}
  image:
    pullPolicy: IfNotPresent
    repository: nealmorris/dotnetk8
    tag: ""
  ingress:
    annotations:
      nginx.ingress.kubernetes.io/rewrite-target: /
    enabled: true
    hosts:
    - host: chart-example.local
      paths:
      - path: /my-test-app
        pathType: Prefix
  replicaCount: 1
  service:
    port: 80
    type: ClusterIP
  serviceAccount:
    create: false
tolerations: []

HOOKS:
MANIFEST:
---
# Source: test-app/charts/test-app-api/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: my-test-app-release-test-app-api
  labels:
    helm.sh/chart: test-app-api-0.1.0
    app.kubernetes.io/name: test-app-api
    app.kubernetes.io/instance: my-test-app-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: test-app-api
    app.kubernetes.io/instance: my-test-app-release
---
# Source: test-app/charts/test-app-api/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: my-test-app-release-test-app-api
  labels:
    helm.sh/chart: test-app-api-0.1.0
    app.kubernetes.io/name: test-app-api
    app.kubernetes.io/instance: my-test-app-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: test-app-api
      app.kubernetes.io/instance: my-test-app-release
  template:
    metadata:
      labels:
        app.kubernetes.io/name: test-app-api
        app.kubernetes.io/instance: my-test-app-release
    spec:
      serviceAccountName: default
      securityContext:
        null
      containers:
        - name: test-app-api
          securityContext:
            null
          image: "nealmorris/dotnetk8:1.16.0"
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 5000
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /
              port: http
          readinessProbe:
            httpGet:
              path: /
              port: http
          resources:
            null
---
# Source: test-app/charts/test-app-api/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-test-app-release-test-app-api
  labels:
    helm.sh/chart: test-app-api-0.1.0
    app.kubernetes.io/name: test-app-api
    app.kubernetes.io/instance: my-test-app-release
    app.kubernetes.io/version: "1.16.0"
    app.kubernetes.io/managed-by: Helm
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
    - host: "chart-example.local"
      http:
        paths:
          - path: /my-test-app
            pathType: Prefix
            backend:
              service:
                name: my-test-app-release-test-app-api
                port: 
                  number: 80

